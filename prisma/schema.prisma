generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Product {
  id          String      @id @default(uuid())
  name        String
  description String
  price       Float
  category    String?
  imageUrl    String
  Stock       Stock?
  CartItems   CartItem[]
  OrderItems  OrderItem[]
  favorites   Favorite[]

  @@map("products")
}

model User {
  id        String     @id @default(uuid())
  name      String
  email     String     @unique
  password  String
  address   String?
  phone     String?
  Carts     Cart[]
  Orders    Order[]
  addresses Address[]
  favorites Favorite[]

  @@map("users")
}

model Stock {
  productId String  @id @map("product_id")
  quantity  Int
  Product   Product @relation(fields: [productId], references: [id])

  @@map("stocks")
}

model Cart {
  id     String     @id @default(uuid())
  userId String     @map("user_id")
  User   User       @relation(fields: [userId], references: [id])
  Items  CartItem[]

  @@map("carts")
}

model CartItem {
  id        String  @id @default(uuid())
  cartId    String  @map("cart_id")
  productId String  @map("product_id")
  quantity  Int
  Cart      Cart    @relation(fields: [cartId], references: [id])
  Product   Product @relation(fields: [productId], references: [id])

  @@map("cart_items")
}

model Order {
  id        String      @id @default(uuid())
  userId    String      @map("user_id")
  status    String
  total     Float
  createdAt DateTime    @map("created_at")
  User      User        @relation(fields: [userId], references: [id])
  Items     OrderItem[]

  @@map("orders")
}

model OrderItem {
  id        String  @id @default(uuid())
  orderId   String  @map("order_id")
  productId String  @map("product_id")
  quantity  Int
  price     Float
  Order     Order   @relation(fields: [orderId], references: [id])
  Product   Product @relation(fields: [productId], references: [id])

  @@map("order_items")
}

model Address {
  id         String  @id @default(uuid())
  street     String
  city       String
  state      String
  country    String
  postalCode String  @map("postal_code")
  user       User?   @relation(fields: [userId], references: [id])
  userId     String? @map("user_id")

  @@map("address")
}

model Favorite {
  id        Int     @id @default(autoincrement())
  user      User    @relation(fields: [userId], references: [id])
  userId    String  @map("user_id")
  product   Product @relation(fields: [productId], references: [id])
  productId String  @map("product_id")

  @@unique([userId, productId])
}
